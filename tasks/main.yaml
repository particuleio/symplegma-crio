---
- name: Crio | Ensure crio required directory exist
  file:
    path: "{{ item }}"
    mode: "u+rw,g+r,o+r"
    state: directory
  with_items:
    - "{{ crio_release_dir }}"
    - "{{ crio_config_dir }}"
    - "{{ crio_config_dir }}/crio.conf.d"
    - "{{ crio_containers_dir }}"

- name: Crio | Remove files is needed
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ crio_config_dir }}/crio.conf.d/02-croup-manager.conf"
  when: systemd_cgroup

- name: Crio | Download binaries
  unarchive:
    src: "{{ crio_release_url }}"
    dest: "{{ crio_release_dir }}"
    remote_src: true
    extra_opts: [--strip-components=1]
  notify: restart crio

- name: Crio | Drop systemd unit
  template:
    src: crio.service.j2
    dest: /etc/systemd/system/crio.service
    mode: 'u+rw,g+r,o+r'
  notify: restart crio

- name: Crio | Drop crio cgroups config
  template:
    src: 02-cgroup-manager.conf.j2
    dest: "{{ crio_config_dir }}/crio.conf.d/02-croup-manager.conf"
    mode: 'u+rw,g+r,o+r'
  notify: restart crio
  when: not systemd_cgroup

- name: Crio | Drop crio runc config
  template:
    src: "{{ item }}.j2"
    dest: "{{ crio_config_dir }}/crio.conf.d/{{ item }}"
    mode: 'u+rw,g+r,o+r'
  notify: restart crio
  loop:
    - 10-crun.conf
    - 10-conmon.conf
    - 10-pinns.conf

- name: Crio | Drop crio umount config
  template:
    src: crio-umount.conf.j2
    dest: "{{ crio_config_dir }}/crio-umount.conf"
    mode: 'u+rw,g+r,o+r'
  notify: restart crio

- name: Crio | Drop policy config
  template:
    src: policy.json.j2
    dest: /etc/containers/policy.json
    mode: 'u+rw,g+r,o+r'
  notify: restart crio

- name: Crio | Drop registries config
  template:
    src: registries.conf.j2
    dest: /etc/containers/registries.conf
    mode: 'u+rw,g+r,o+r'
  notify: restart crio

- name: Crio | List crio binaries
  find:
    paths: "{{ crio_release_dir }}/bin"
  register: crio_binaries
  notify: restart crio

- name: Crio | Symlink crio binaries
  file:
    src: "{{ item.path }}"
    dest: "{{ bin_dir }}/{{ item.path | basename }}"
    state: link
  with_items: "{{ crio_binaries.files }}"
  notify: restart crio

- name: Crio | Restart crio serving if necessary
  meta: flush_handlers

- name: Crio | Enable Crio unit
  systemd:
    name: crio.service
    state: started
    enabled: true
